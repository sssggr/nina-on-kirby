Title: Reteaming for Faster Flow: A Case Study

----

Slug: re-teaming-for-faster-flow

----

Teasertext: Adaptive Systems for Fast Flow: How Pirate Ship Software Redesigned Its Teams Using Wardley Maps, DDD, and Team Topologies. In this case study, I demonstrate how evolutionary cell division works in practice.

----

Headline: Reteaming for Faster Flow: A Case Study

----

Modules: [{"content":{"text":"How do you design teams so they can continuously evolve while maximizing the value stream in your company? This question arises sooner or later in every growing software company. In many organizations, teams form the foundation upon which companies build their entire organizational design. In this case study, I explain how we chose a participatory approach for Pirate Ship to master exactly this challenge.\n\nTogether with  (link: https://susannekaiser.net/ text: Susanne Kaiser), the German founders of (link: https://pirateship.tech/ text: Pirate Ship), and the development teams, we put the Architecture for Flow approach, developed by Susanne, into practice and guided a reorganization process that actively involved the teams in all decisions.\n\nWhat to expect from this case study:\n\n* How we used Architecture for Flow as a holistic approach for team reorganization\n* Which workshops and formats proved successful in the participatory redesign of teams\n* How we worked with self-selection and consent-based decision making\n* What learnings can be derived for similar reorganization processes"},"id":"5fd0d391-151b-48ab-a663-6a3321d02663","isHidden":false,"type":"bodytext"},{"content":{"subheading":"The Initial Situation at Pirate Ship"},"id":"7fcc55d9-6212-4954-974e-d93a40cbd2fd","isHidden":false,"type":"subheading"},{"content":{"text":"Pirate Ship is a company founded in 2014 that offers cloud-based shipping software for small and medium-sized businesses, making shipping as easy and affordable as possible for them. What makes it special: The software is free to use, with the business model based on partnerships with shipping service providers.\n\nThe company operates from two locations: the headquarters with customer support, marketing, finance, and partner management is in the USA. Software development is based in Hamburg, Germany, where around 30 developers are now employed.\n\nThe major growth spurt began in 2021. Until then, the Hamburg development department had worked as a single team â€” with the characteristic spirit of a startup crew: little structure, lots of freedom, everyone working on everything. When the team was split and an infrastructure team was additionally created in 2022, this meant a significant cultural change, especially for the \"original crew.\" But the previous team setup had reached its limits.\n\nIn 2023, it became apparent that further growth was imminent. The existing teams were reaching their limits - both in terms of the size of their domains and workload. The two German founders & managing directors wanted to take a different approach this time: The new team structure should be sustainable and flexible to enable future growth. I accompany the German organization and its managing directors as a consultant and sparring partner and recommended collaboration with Susanne Kaiser as an expert in Team Topologies, Domain Driven Design, and Wardley Mapping and her Architecture for Flow approach derived from these methods."},"id":"f24e6e72-4b1d-4d70-8fbe-377d3e63dcfa","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"The Specific Challenges","styleselect":""},"id":"e742b6c7-598b-4a8c-97cf-c00029af6d4e","isHidden":false,"type":"subsubheading"},{"content":{"text":"In 2023, there were three feature teams and one infrastructure team. At the center was a PHP monolith that had grown over the years. The teams were struggling with several challenges:\n\n* Overload: The teams were at their capacity limit\n* Domains too large: The teams had to handle too many different tasks, which led to knowledge silos and made knowledge exchange difficult\n* Unclear ownership: Responsibilities for components used across teams were often unclear or historically tied to individuals\n* Development bottlenecks: These made further team growth necessary\n\nWhile Pirate Ship was already working with vertically sliced, cross-functional teams, the first team divisions had occurred without in-depth analysis of the domain. This time it was to be different: The goal was not only to integrate ten more developers but above all to create a sustainable team structure. Through a thorough analysis of the domain, teams should be created that can deliver value independently and effectively despite the complex monolith. Limiting teams to a maximum of seven people was intended to enable close collaboration and prevent the emergence of new knowledge silos.\n\nAn important context for our approach: Pirate Ship maintains a very participatory culture. The teams work in an agile manner and are responsible for their own work processes. They work with quarterly goals, and besides the teams, there are self-managed working groups for areas such as recruiting, onboarding, and DevOps."},"id":"93803f22-ff09-4f48-8a3c-7576a082aa69","isHidden":false,"type":"bodytext"},{"content":{"subheading":"Architecture for Flow: A Holistic Approach for Adaptive Systems"},"id":"24d8ee02-62a4-4719-a1fe-ea7e1d719a40","isHidden":false,"type":"subheading"},{"content":{"text":"In a world of rapid changes and growing uncertainties, organizations must continuously adapt to remain competitive. But how do you design systems that can evolve and thrive in constant change? The Architecture for Flow approach developed by Susanne Kaiser offers a holistic approach that combines business strategy, software architecture, and team organization."},"id":"f6969e83-fa8c-4b79-b840-ee8641cb853e","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"The Power of Combination","styleselect":""},"id":"c2c4c160-b9dd-44fe-b87d-bd519c1888f4","isHidden":false,"type":"subsubheading"},{"content":{"text":"The strength of Architecture for Flow lies in the combination of these three approaches:\n\n* Wardley Maps help us understand the strategic landscape and identify value chains\n* Domain Driven Design helps us translate these value streams into manageable bounded contexts\n* Team Topologies gives us the tools to optimally organize teams around these bounded contexts\n\nAt Pirate Ship, this combined approach helped us create an adaptive organization that can not only respond quickly and sustainably to changes but also consciously shape its further growth."},"id":"0d3576c6-ed95-4b83-86db-7f4803b8c336","isHidden":false,"type":"bodytext"},{"content":{"bigimage":["file://n0fdFPgoBJhYPpU1"],"styleselect":"flex"},"id":"71a65244-c209-44cc-aadd-9a5c3f644835","isHidden":false,"type":"bigimage"},{"content":{"subsubheading":"Wardley Mapping: The Strategic Map","styleselect":""},"id":"cc7e91d3-b202-48db-a7cf-6de9c3ea3a3e","isHidden":false,"type":"subsubheading"},{"content":{"text":"Wardley Mapping is a business strategy framework developed by Simon Wardley. At its center is the Wardley Map - a visual representation of an organization's business landscape. This map presents two central dimensions:\n\n* The vertical axis shows the value chain including visibility: At the very top as the anchor of the Wardley Map are the users and their needs, below are all components that contribute to fulfilling these needs\n* The horizontal axis shows the evolution stage of the components:\n    * Genesis: Completely new, innovative components\n    * Custom Built: Specially developed solutions\n    * Product: Available products or open-source solutions\n    * Commodity: Standardized services\n\nThis visualization helps organizations with important strategic decisions: Where do we need to develop ourselves? Where can we use ready-made products? What should we outsource?"},"id":"0807793f-5014-4a12-ac52-56e190c28a28","isHidden":false,"type":"bodytext"},{"content":{"bigimage":["file://wzSJ2qjw9fgyK11K"],"styleselect":"flex"},"id":"0c6a622b-91d9-46db-b4fd-0fa083117f20","isHidden":false,"type":"bigimage"},{"content":{"subsubheading":"Domain-Driven Design: Mastering Complexity through Shared Language","styleselect":""},"id":"e6ccee56-0280-4512-a202-6a1c29a10d00","isHidden":false,"type":"subsubheading"},{"content":{"text":"Domain-Driven Design (DDD) is more than just a technical approach - it's a collection of concepts and practices that help understand complex business domains and map them in software. Central to this is the close collaboration between domain experts and development teams to develop a common language and understanding.\nDDD distinguishes three types of domains:\n\n1. **Core Domain:** The area that provides the essential competitive advantage. At Pirate Ship, this is, for example, intelligent shipping processing. This domain should be developed internally.\n2. **Supporting Subdomains:** Areas that support the core business but do not offer a direct competitive advantage. For example, the evaluation of shipping statistics. These can be covered by existing solutions or developed internally with less effort.\n3. **Generic Subdomains:** Standard functions that every company needs, such as user authentication. Here, one should usually rely on existing solutions.\n\nAnother important concept is Bounded Contexts: They define clear boundaries within which a specific domain model applies. This not only helps with technical structuring, these bounded contexts are also excellent for identifying team boundaries. In practice, this leads to clearer responsibilities and reduced complexity."},"id":"42ae0746-413c-4d49-8731-c29be8a4b79f","isHidden":false,"type":"bodytext"},{"content":{"bigimage":["file://oiQXvMoM2RVi6wdx"],"styleselect":"flex"},"id":"3c038e05-3692-4fc4-9226-20fe1e4ff94a","isHidden":false,"type":"bigimage"},{"content":{"text":"A lightweight format for exploring domains and identifying bounded contexts is the EventStorming workshop method. During EventStorming sessions, teams visualize their business processes together by arranging all important business events (Domain Events) on a large board. The method is particularly effective because it brings development teams and domain experts together on an equal footing and, through its visual nature, helps to recognize patterns and natural boundaries in the domain."},"id":"0648c219-5239-4538-9584-0c9677453ab9","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Team Topologies: Organizing Teams for Sustainable Flow","styleselect":""},"id":"5fb057b0-108f-4299-aa14-ce64eedadcd5","isHidden":false,"type":"subsubheading"},{"content":{"text":"(link: https://teamtopologies.com/ text: Team Topologies) is a concept for organizing software development teams, developed by Matthew Skelton and Manuel Pais. The approach aims to enable fast and sustainable value creation by designing teams and their interactions in such a way that they can focus on their core tasks. For this, the framework defines four team types and three interaction modes that together enable an adaptive organization in which teams can deliver value independently of each other.\n\nThe four basic team types are:\n\n1. **Stream-aligned Teams:** These teams are the heart of the organization. They are aligned to a continuous stream of work and end-to-end responsible for specific business functions.\n2. **Platform Teams: **They provide internal platforms as self-service products that can be used by stream-aligned teams. This reduces dependencies and accelerates development.\n3. **Enabling Teams:** These teams act as internal consulting units and help other teams build new capabilities. They are particularly important in phases of change.\n4. **Complicated-Subsystem Teams:** They take care of specialized components that require special expertise.\n\nFor these teams to work together effectively, Team Topologies defines three central interaction modes:\n\n* **Collaboration:** Close, time-limited collaboration, ideal for innovation and exploration\n* **X-as-a-Service:** One team uses the services of another team\n* **Facilitation:** Active support in building new capabilities"},"id":"9cb50e18-f7f6-42eb-9569-c399b7f632b9","isHidden":false,"type":"bodytext"},{"content":{"bigimage":["file://CV1C9pXVT3khggVo"],"styleselect":"flex"},"id":"4d388101-a43b-4f57-adf7-5b244c1033bd","isHidden":false,"type":"bigimage"},{"content":{"text":"With this methodological foundation, we set out to implement it practically at Pirate Ship. The challenge now was to translate these theoretical concepts into a transformation process that considers both the domain complexity and the human aspects of reorganization. How we approached this in practice is described below."},"id":"e5fbf0c0-cc33-4386-bb6e-f86b7c21ed82","isHidden":false,"type":"bodytext"},{"content":{"subheading":"The Implementation Journey"},"id":"56b16b41-3972-449a-ae8e-2aa219376b80","isHidden":false,"type":"subheading"},{"content":{"text":"The reorganization at Pirate Ship followed an organic, three-phase process. Instead of a radical restructuring, we pursued an evolutionary approach: The existing teams would serve as seedlings for new teams. This \"cell division\" allowed us to preserve existing domain knowledge and minimize handover efforts."},"id":"9efd3ec1-7f40-443f-8435-4599e3971326","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Phase 1: Discovery und Design","styleselect":""},"id":"63850a2f-fcee-47a2-9774-e99d3af46a92","isHidden":false,"type":"subsubheading"},{"content":{"text":"The kickoff was a series of workshops facilitated by Susanne on Wardley Mapping, Domain Driven Design, and Team Topologies. These workshops had three central goals:\n\n1. **Create a methodological foundation: **All teams received training in the three core methods\n2. **Deepen domain understanding:** The teams analyzed their business areas, the business domain, and the software architecture\n3. **Develop future visions:** The teams jointly developed ideas for possible bounded contexts\n\nA core component of this phase were EventStorming sessions. In EventStorming, teams jointly visualize their business processes by arranging all domain events (important business events) on a large wall or digital board. At Pirate Ship, Susanne worked intensively with Miro boards as the workshops were predominantly held remotely.\n\nThe result of this phase was not yet a final structure, but rather a kaleidoscope of different perspectives: Each team had identified several options for possible bounded contexts and their grouping. This diversity of views later proved valuable for shaping the final structure."},"id":"f82bd53f-0f0b-47af-9d40-fafda3c68dff","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Phase 2: The Art of Cell Division","styleselect":""},"id":"2af8e962-7a8b-40c8-83c6-6024372a137a","isHidden":false,"type":"subsubheading"},{"content":{"text":"Two teams started the cell division phase. The baseline was clear:\n\n* The teams had already grown beyond their optimal size\n* The workload had reached critical levels\n* The product strategy foresaw further growth in these areas\n\nFor the cell division workshops, we developed a blueprint that proved to be a very effective basis for the 2-day workshops. One team workshop was completely remote, the other team met on site.\n\n**1. Hopes & Fears**\n\n* Openly addressing and documenting hopes and fears\n* Creates psychological safety for the change process\n\n**2. Domain Division**\n\n* Presentation of an initial proposal by the founder & CTO â€“ based on the bounded contexts developed in Phase 1 and the patterns emerging from them\n* Presentation of the product strategy for the area. This helped to distribute the workload of the identified bounded contexts evenly between two teams.\n* Discussion and adjustment of the proposal with consent decision making\n\n**3. Skill Mapping**\n\n* Definition of the skills needed for the new teams\n* Analysis of existing and still needed competencies\n\n**4. Clarifying Framework Conditions**\n\n* Number of planned new hires, team size requirements\n* What expectations does the management and the organisation have for the teams?\n\n**5. Self-Selection**\n\n* The team members divide according to the self-selection principle. We recorded the decision for the desired team concealed on post-its.\n* Check: Does the distribution fit in terms of skills or are adjustments necessary?\n* Consent-based decision making\n\n**6. Next Steps**\n\n* Definition of concrete next steps\n* Creation of a rough timeline\n\nAn interesting aspect: The two teams chose different timeframes for their cell division. The first team started in the new constellation just a few weeks after the workshop, as new team members had already been found. The second team decided to carry out the division only after onboarding the newly hired colleagues."},"id":"7cbbe1bf-c366-4143-8838-7a795647acc9","isHidden":false,"type":"bodytext"},{"content":{"subsubsubheading":"Learnings from the First Cell Division"},"id":"4c7c8930-5264-43ab-b1cc-e0844374f199","isHidden":false,"type":"subsubsubheading"},{"content":{"text":"After three months, we conducted a cross-team retrospective. This showed that we had successfully addressed many of the original challenges:\n\nThe most important improvements:\n\n* The team overload was reduced through smaller, more focused units\n* The too large domains were successfully divided, which led to fewer context switches (and thus less cognitive overload)\n* The unclear ownership was at least partially replaced by clearly defined responsibilities\n* The teams could delve deeper into their respective subject areas\n\nNew challenges:\n\n* Technical limitations: The historically grown PHP monolith did not optimally reflect the new domain structure\n* Necessary investments: There was an increased need for refactoring work\n* Knowledge transfer: The handover of domain knowledge needed more structure than originally assumed\n*  Shared Components: New coordination needs arose for components used across teams\n\nThe last point led directly to Phase 3: Focus on shared components."},"id":"d9f54da6-8d08-4d67-8ac0-4f0eb5445d65","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Phase 3: From Shared Components to Platform Teams","styleselect":""},"id":"50b35af6-6301-493e-b7b3-fe26c305329d","isHidden":false,"type":"subsubheading"},{"content":{"text":"A central insight from the cell divisions was the need for clear responsibilities for components used across teams. While we had created clear responsibilities for domain-specific components, there were still ambiguities with the Shared Components.\n\n####The Initial Situation\nSeveral components are used by different teams, for example:\n\n* Frontend components\n* Database adapters\n* Monitoring solutions\n* ...\n\nThe responsibilities for these components had grown historically and were often tied to individuals. This led to several problems:\n\n* Unclear responsibilities\n* Dependencies between teams\n* Delays in changes\n* Knowledge lies with individual developers\n\n####The Path to the Platform Team\nWith the Platform Teams, we adopted a concept from Team Topologies. Platform Teams have a special role: They provide services to other teams as self-service platforms. This reduces dependencies and accelerates development.\n\nFor the conception of the Platform Team, Susanne and I planned another workshop.\n\n**Preparation:**\n\n* Asynchronous inventory of all shared components\n* Collection of current responsibilities\n* Open invitation to all interested parties (In the end, almost 20 participants were there)\n\n**1. Hopes & Fears**\n\n* Expectations and concerns regarding the establishment of a Platform Team\n\n**2. Status Quo Analysis**\n\n* Mapping of current pain points\n* Inventory of shared components\n* Identification of dependencies\n\n**3. User Needs of the Stream-aligned Teams**\n\n* What do the teams need from a platform?\n* Which services are critical?\n* What requirements exist for self-service components?\n\n**4. Team Design**\n\n* Development of different team constellations\n* Discussion of the options\n* Consent-based decision\n\n**5. Transition Planning**\n\n* How do we get there?\n* What questions need to be clarified next (e.g., number of new hires)?\n\nWhere necessary, there were brief recaps on User Value, Value Chain & Wardley Mapping in the workshop - the initial workshops of the teams on these topics had already taken place several months earlier.\n\n**Results and Next Steps**\n\nThe workshop led to concrete results:\n\n* Vision for the first iteration of the Platform Team\n* Prioritized list of Platform Services\n* Rough implementation plan\n\nParticularly valuable was the joint development of the solution: All participants could contribute their perspectives and participate in the design. This created broad acceptance for the new Platform Team.\n\nThe actual establishment of the Platform Team is still ongoing at the time of publication of this article. An important aspect: This is not a completed process, but the beginning of a continuous evolution. The Platform Team will evolve based on the needs of the stream-aligned teams and the learnings from practice."},"id":"c80802f1-7553-4c9b-80e7-967ad8c076fe","isHidden":false,"type":"bodytext"},{"content":{"bigimage":["file://xiGCVj8UR7X2p7Ai"],"styleselect":"flex"},"id":"4544a874-30ab-4e9e-9c38-46fdf5e54f66","isHidden":false,"type":"bigimage"},{"content":{"subheading":"Conclusion: Central Learnings from the Reorganization Process"},"id":"47a08666-e260-4ed1-9967-a58146775f3a","isHidden":false,"type":"subheading"},{"content":{"text":"After several years of experience with team reorganizations - both as a team member, tech lead, and as a consultantâ€”several success factors have become particularly evident from my perspective at Pirate Ship:"},"id":"485d971b-dfb3-47f4-b06a-0aee515e3f09","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Deep Domain Understanding is the Key","styleselect":""},"id":"dd033cec-bdab-4dd7-a7f6-cf49ee87adc0","isHidden":false,"type":"subsubheading"},{"content":{"text":"A fundamental understanding of the domain is the most important factor for a successful reorganization. This may sound self-evident but is often neglected in practice. Often teams are restructured without really penetrating the underlying complexity of the domain. With complex products and architectures that have grown over years, this approach takes revenge: Teams remain bound to each other through dependencies and cannot deliver value independently of each other."},"id":"d61ebbd6-5c50-4df0-a1e6-f424ffac58a9","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Leadership Support as a Foundation","styleselect":""},"id":"fd722546-2267-4e68-be27-f9b9147c74cd","isHidden":false,"type":"subsubheading"},{"content":{"text":"A decisive success factor at Pirate Ship was the continuous support from the leadership team. The German founders and managing directors not only initiated the process but actively supported it:\n\n* They provided the necessary resources and time for workshops and reorganization\n* They set clear framework conditions but allowed the teams freedom for self-organization within these boundaries\n* They were present and approachable at critical workshops without dominating the participatory process\n\nThis balance between strategic orientation and trust was evident in three central guidelines:\n\n* Team Topologies as guiding framework: The decision to align the organization according to the principles of Team Topologies with stream-aligned teams and platform teams\n* Maximum team size: Teams should not be larger than seven people to enable effective collaboration\n* Recruiting: Team formation took place through self-selection, while the management set the framework for new hires\n\nAn important learning for future reorganizations: The timeframe for implementation should be defined more clearly from the beginning. At Pirate Ship, the teams could decide for themselves when to divide, which allowed flexibility on the one hand but also led to uncertainties in the overall process on the other."},"id":"4f4f7092-e251-4591-981d-c2ae477983ca","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Participation Pays Off","styleselect":""},"id":"42480773-ce32-48b2-97fd-b54448038e71","isHidden":false,"type":"subsubheading"},{"content":{"text":"Investing in a participatory process takes timeâ€”time that pays off in multiple ways:\n\n* Better solutions: Involving different perspectives makes it possible to capture the complex domain in its entire depth. Teams contribute their specific knowledge - from technical details to business processes - which leads to more well-founded structures that do justice to the actual complexity\n* Higher acceptance: When teams co-design the new structure, they actively support the change\n* Sustainable change: The jointly developed understanding forms a solid basis for future adjustments"},"id":"13a37db4-54d6-4fb1-961f-2136718a46de","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Balance Between Participation and Progress","styleselect":""},"id":"fef0e234-8ca7-4e82-917d-a090c74741f1","isHidden":false,"type":"subsubheading"},{"content":{"text":"To ensure that participation does not lead to paralysis, several practices have proven successful at Pirate Ship:\n\n* Consent instead of consensus: While consensus means that everyone must actively agree, with the consent principle, it is sufficient that no one has a serious objection. This accelerates decisions without neglecting participation. A serious objection means that the person can justify why the decision would harm the team or the organization.\n* Clear framework conditions: Early clarification of boundaries and possibilities with the leadership\n* Prepared decision templates: They serve as a discussion basis and accelerate the process."},"id":"e367d9f1-61b0-49bf-a1b1-2d2d5d30d643","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Visualization as the Key to Common Understanding","styleselect":""},"id":"20bd008c-a1bd-4966-b871-fe1156298001","isHidden":false,"type":"subsubheading"},{"content":{"text":"The continuous work with visual models â€” be it in Miro boards or other formats  â€” has proven indispensable:\n* It makes complex relationships tangible.\n* It creates a common language.\n* It documents decisions and their foundations.\n* It serves as a basis for further discussions and adjustments."},"id":"e91e5db6-9fe5-4d2b-aa67-deb2890c846f","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"Cell Division as an Evolutionary Approach","styleselect":""},"id":"7770ad9d-2c42-4c3b-b3ca-d9de99ef954f","isHidden":false,"type":"subsubheading"},{"content":{"text":"The concept of cell division has proven itself as an evolutionary approach to team reorganization and division in our case. Instead of a radical upheaval, this organic process allows existing domain knowledge to be preserved within the teams and passed on. The gradual division also significantly reduces the effort for knowledge transfer and handovers, as not all know-how has to be redistributed at once. This evolutionary path allows organizations â€” if this fits the speed of growth â€” to grow at a healthy pace. The teams can transform evolutionarily, and the company can cautiously expand its capacities while preserving its technical expertise."},"id":"9692a1fd-9b2e-4738-9698-e1d9e2af5d99","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"The Process Becomes Easier","styleselect":""},"id":"42339b85-8e9d-4fe2-9865-24633cce9a2d","isHidden":false,"type":"subsubheading"},{"content":{"text":"A central insight from the process at Pirate Ship: With each step, change becomes easier. The first team division was particularly challenging â€” especially for the \"original crew.\" For a company in the pioneering phase, the realization that not everyone can work in one team anymore represents an important development step. It's the farewell to the startup phase, where everyone does everything and structures are rather informal.\n\nBut with each further division, trust in one's own ability to change grows. The organization learns from its experiences, develops routines, and gains confidence. What initially seems tough and difficult increasingly becomes a natural process of further development. Meanwhile, one team has even initiated another cell division process on its own."},"id":"39cc0416-1b15-4cca-a3d1-2a614d7c869e","isHidden":false,"type":"bodytext"},{"content":{"subsubheading":"The Path to Sustainable Change","styleselect":""},"id":"25200fe5-0212-4728-b8ed-12ad921d902e","isHidden":false,"type":"subsubheading"},{"content":{"text":"The experiences at Pirate Ship show: Reorganization is not a one-time project with a defined end, but a continuous process. Teams and organizations are constantly evolving â€” be it through new product requirements, technological changes, or personnel growth.\n\nArchitecture for Flow has offered us a valuable framework that can be flexibly adapted to different situations. Especially the combination of methodological foundation through Wardley Mapping, DDD, and Team Topologies on the one hand and real participation on the other has proven itself. It makes it possible to approach even complex changes step by step.\n\nAt Pirate Ship, it also becomes clear what happens when the teams themselves take initiative: They suggest adjustments and actively shape their work areas. This confirms Peter Senge's insight: \"People don't resist change, they resist being changed.\" When teams have the opportunity to co-design change, this opens up space for sustainable solutions and organizational learning."},"id":"5a0da90f-45c8-4042-9a58-4492eb06616f","isHidden":false,"type":"bodytext"},{"content":{"headline":"Thinking about reorganizing your teams and need support? Let's talk. Book a free discovery call.","buttontext":"Schedule call","buttonlink":["page://QjQlA0CmqokWM3F5"]},"id":"5dcc050f-7f1c-4e7e-a3f1-b6eb6441216d","isHidden":false,"type":"contacthighlight"},{"content":{"subheading":"Literature & Sources"},"id":"d76a94c8-6de6-44fd-af80-c7d8c5bd1314","isHidden":false,"type":"subheading"},{"content":{"text":"**Articles & Books**\nBrandolini, Alberto: Introducing EventStorming, 2021.\nEvans, Eric: Domain-Driven Design: Tackling Complexity in the Heart of Software, 2023.\nKaiser, Susanne: Adaptive, Socio-Technical Systems with Architecture for Flow: Wardley Maps, DDD, and Team Topologies, https://www.infoq.com/articles/adaptive-socio-technical-systems-flow/, 2023.\nPais, Manuel and Skelton, Matthew: Team Topologies. Organizing Business and Technology Teams for Fast Flow, 2019.\nVernon, Vaughn, Domain-Driven Design Distilled, 2016.\n\n**Websites & Online Resources**\nLearn Wardley Mapping, https://learnwardleymapping.com\nEventStorming, https://www.eventstorming.com/\nDomain-Driven Design Starter Modelling Process, https://github.com/ddd-crew/ddd-starter-modelling-process"},"id":"cfac0a48-6f5a-4caa-b062-7260038b147f","isHidden":false,"type":"bodytext"}]

----

Date: 2025-03-11

----

Headerimage: - file://79J3VCkT5lupdPce

----

Metatitle: Reteaming for Faster Flow: A Case Study

----

Metatemplate: 

----

Usetitletemplate: true

----

Metadescription: Adaptive Systems for Fast Flow: How Pirate Ship Software Redesigned Its Teams Using Wardley Maps, DDD, and Team Topologies. In this case study, I demonstrate how evolutionary cell division works in practice.

----

Ogtemplate: 

----

Useogtemplate: true

----

Ogdescription: Adaptive Systems for Fast Flow: How Pirate Ship Software Redesigned Its Teams Using Wardley Maps, DDD, and Team Topologies. In this case study, I demonstrate how evolutionary cell division works in practice.

----

Ogimage: 

----

Twittercardtype: 

----

Twitterauthor: 

----

Robotsindex: true

----

Robotsfollow: true

----

Robotsarchive: true

----

Robotsimageindex: true

----

Robotssnippet: true

----

Metainherit: 